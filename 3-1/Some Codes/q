Help on class tuple in module builtins:

class ttuuppllee(object)
 |  tuple() -> empty tuple
 |  tuple(iterable) -> tuple initialized from iterable's items
 |  
 |  If the argument is a tuple, the return value is the same object.
 |  
 |  Methods defined here:
 |  
 |  ____aadddd____(self, value, /)
 |      Return self+value.
 |  
 |  ____ccoonnttaaiinnss____(self, key, /)
 |      Return key in self.
 |  
 |  ____eeqq____(self, value, /)
 |      Return self==value.
 |  
 |  ____ggee____(self, value, /)
 |      Return self>=value.
 |  
 |  ____ggeettaattttrriibbuuttee____(self, name, /)
 |      Return getattr(self, name).
 |  
 |  ____ggeettiitteemm____(self, key, /)
 |      Return self[key].
 |  
 |  ____ggeettnneewwaarrggss____(...)
 |  
 |  ____ggtt____(self, value, /)
 |      Return self>value.
 |  
 |  ____hhaasshh____(self, /)
 |      Return hash(self).
 |  
 |  ____iitteerr____(self, /)
 |      Implement iter(self).
 |  
 |  ____llee____(self, value, /)
 |      Return self<=value.
 |  
 |  ____lleenn____(self, /)
 |      Return len(self).
 |  
 |  ____lltt____(self, value, /)
 |      Return self<value.
 |  
 |  ____mmuull____(self, value, /)
 |      Return self*value.n
 |  
 |  ____nnee____(self, value, /)
 |      Return self!=value.
 |  
 |  ____nneeww____(*args, **kwargs) from builtins.type
 |      Create and return a new object.  See help(type) for accurate signature.
 |  
 |  ____rreepprr____(self, /)
 |      Return repr(self).
 |  
 |  ____rrmmuull____(self, value, /)
 |      Return self*value.
 |  
 |  ccoouunntt(...)
 |      T.count(value) -> integer -- return number of occurrences of value
 |  
 |  iinnddeexx(...)
 |      T.index(value, [start, [stop]]) -> integer -- return first index of value.
 |      Raises ValueError if the value is not present.
